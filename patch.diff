commit f92936cc48c5b860d47ff2709e77e95a7a0546a1
Author: Lucas Azevedo <lhs_azevedo@hotmail.com>
Date:   Mon Jul 20 17:54:03 2020 -0300

    First commit

diff --git a/find-the-missing-term-in-an-arithmetic-progression/.devcontainer/Dockerfile b/find-the-missing-term-in-an-arithmetic-progression/.devcontainer/Dockerfile
new file mode 100644
index 0000000..cd6e40d
--- /dev/null
+++ b/find-the-missing-term-in-an-arithmetic-progression/.devcontainer/Dockerfile
@@ -0,0 +1,38 @@
+#-------------------------------------------------------------------------------------------------------------
+# Copyright (c) Microsoft Corporation. All rights reserved.
+# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
+#-------------------------------------------------------------------------------------------------------------
+FROM php:7-alpine
+
+ARG USERNAME=vscode
+ARG USER_UID=1000
+ARG USER_GID=$USER_UID
+
+ADD https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/master/install-php-extensions /usr/local/bin/
+RUN chmod uga+x /usr/local/bin/install-php-extensions && sync
+
+# Configure apt and install packages
+    #
+    # install git iproute2, procps, lsb-release (useful for CLI installs)
+    RUN apk add git
+    # less iproute2 procps iproute2 lsb-release \
+    #
+    # Install extensions
+    RUN install-php-extensions zip xdebug \
+    && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    && echo "xdebug.remote_autostart=on" >> /usr/local/etc/php/conf.d/xdebug.ini
+    #
+    # Install xdebug
+    # && yes | pecl install xdebug \
+    # && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
+    # && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    # && echo "xdebug.remote_autostart=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    #
+    # Install Composer
+    RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
+    && composer global require hirak/prestissimo \
+    && composer clear-cache
+    #
+    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.
+    RUN addgroup --gid 1000 --system dockeruser \
+    && adduser --system --uid 1000 --ingroup dockeruser dockeruser
diff --git a/find-the-missing-term-in-an-arithmetic-progression/.devcontainer/devcontainer.json b/find-the-missing-term-in-an-arithmetic-progression/.devcontainer/devcontainer.json
new file mode 100644
index 0000000..6bcaef9
--- /dev/null
+++ b/find-the-missing-term-in-an-arithmetic-progression/.devcontainer/devcontainer.json
@@ -0,0 +1,26 @@
+// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
+// https://github.com/microsoft/vscode-dev-containers/tree/v0.122.1/containers/php-7
+{
+	"name": "PHP 7",
+	"dockerFile": "Dockerfile",
+	
+	// Set *default* container specific settings.json values on container create.
+	"settings": { 
+		"terminal.integrated.shell.linux": "/bin/sh"
+	},
+
+	// Add the IDs of extensions you want installed when the container is created.
+	"extensions": [
+		"felixfbecker.php-debug",
+		"felixfbecker.php-intellisense"
+	]
+
+	// Use 'forwardPorts' to make a list of ports inside the container available locally.
+	// "forwardPorts": [],
+
+	// Use 'postCreateCommand' to run commands after the container is created.
+	// "postCreateCommand": "php -v",
+
+	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
+	// "remoteUser": "vscode"
+}
diff --git a/find-the-missing-term-in-an-arithmetic-progression/.vscode/launch.json b/find-the-missing-term-in-an-arithmetic-progression/.vscode/launch.json
new file mode 100644
index 0000000..612eaac
--- /dev/null
+++ b/find-the-missing-term-in-an-arithmetic-progression/.vscode/launch.json
@@ -0,0 +1,22 @@
+{
+    // Use IntelliSense to learn about possible attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "Listen for XDebug",
+            "type": "php",
+            "request": "launch",
+            "port": 9000
+        },
+        {
+            "name": "Launch currently open script",
+            "type": "php",
+            "request": "launch",
+            "program": "${file}",
+            "cwd": "${fileDirname}",
+            "port": 9000
+        }
+    ]
+}
\ No newline at end of file
diff --git a/find-the-missing-term-in-an-arithmetic-progression/solution.php b/find-the-missing-term-in-an-arithmetic-progression/solution.php
new file mode 100644
index 0000000..e11f7ca
--- /dev/null
+++ b/find-the-missing-term-in-an-arithmetic-progression/solution.php
@@ -0,0 +1,36 @@
+<?php
+
+function findMissing($list) {
+  $first = $list[0];
+  $last = end($list);
+  
+  if ($first === $last) {
+    return $first;
+  }
+  
+  $step = (end($list) - $list[0]) / count($list);
+  
+  $found = false;
+  $l = 0;
+  $r = count($list) - 1;
+  $mid = floor($r/2);
+  while (!$found) {
+    $expected = (int) ($first + $mid * $step);
+    if ($list[$mid] !== $expected) {
+      if ($list[$mid - 1] === $expected) {
+        $r = $mid-1;
+        $mid = $l + floor(($r - $l)/2);
+      } else {
+        return $expected;
+      }
+    } else {
+      $l = $mid+1;
+      $mid = $l + floor(($r - $l)/2);     
+    }
+  }
+}
+
+var_dump(findMissing([1, 2, 3, 4, 5]));
+var_dump(findMissing([1, 3, 4]));
+var_dump(findMissing([1, 3, 5, 9, 11]));
+var_dump(findMissing([100, 200, 300, 500]));
diff --git a/matrix-determinant/.devcontainer/Dockerfile b/matrix-determinant/.devcontainer/Dockerfile
new file mode 100644
index 0000000..cd6e40d
--- /dev/null
+++ b/matrix-determinant/.devcontainer/Dockerfile
@@ -0,0 +1,38 @@
+#-------------------------------------------------------------------------------------------------------------
+# Copyright (c) Microsoft Corporation. All rights reserved.
+# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
+#-------------------------------------------------------------------------------------------------------------
+FROM php:7-alpine
+
+ARG USERNAME=vscode
+ARG USER_UID=1000
+ARG USER_GID=$USER_UID
+
+ADD https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/master/install-php-extensions /usr/local/bin/
+RUN chmod uga+x /usr/local/bin/install-php-extensions && sync
+
+# Configure apt and install packages
+    #
+    # install git iproute2, procps, lsb-release (useful for CLI installs)
+    RUN apk add git
+    # less iproute2 procps iproute2 lsb-release \
+    #
+    # Install extensions
+    RUN install-php-extensions zip xdebug \
+    && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    && echo "xdebug.remote_autostart=on" >> /usr/local/etc/php/conf.d/xdebug.ini
+    #
+    # Install xdebug
+    # && yes | pecl install xdebug \
+    # && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
+    # && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    # && echo "xdebug.remote_autostart=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    #
+    # Install Composer
+    RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
+    && composer global require hirak/prestissimo \
+    && composer clear-cache
+    #
+    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.
+    RUN addgroup --gid 1000 --system dockeruser \
+    && adduser --system --uid 1000 --ingroup dockeruser dockeruser
diff --git a/matrix-determinant/.devcontainer/devcontainer.json b/matrix-determinant/.devcontainer/devcontainer.json
new file mode 100644
index 0000000..6bcaef9
--- /dev/null
+++ b/matrix-determinant/.devcontainer/devcontainer.json
@@ -0,0 +1,26 @@
+// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
+// https://github.com/microsoft/vscode-dev-containers/tree/v0.122.1/containers/php-7
+{
+	"name": "PHP 7",
+	"dockerFile": "Dockerfile",
+	
+	// Set *default* container specific settings.json values on container create.
+	"settings": { 
+		"terminal.integrated.shell.linux": "/bin/sh"
+	},
+
+	// Add the IDs of extensions you want installed when the container is created.
+	"extensions": [
+		"felixfbecker.php-debug",
+		"felixfbecker.php-intellisense"
+	]
+
+	// Use 'forwardPorts' to make a list of ports inside the container available locally.
+	// "forwardPorts": [],
+
+	// Use 'postCreateCommand' to run commands after the container is created.
+	// "postCreateCommand": "php -v",
+
+	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
+	// "remoteUser": "vscode"
+}
diff --git a/matrix-determinant/.vscode/launch.json b/matrix-determinant/.vscode/launch.json
new file mode 100644
index 0000000..612eaac
--- /dev/null
+++ b/matrix-determinant/.vscode/launch.json
@@ -0,0 +1,22 @@
+{
+    // Use IntelliSense to learn about possible attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "Listen for XDebug",
+            "type": "php",
+            "request": "launch",
+            "port": 9000
+        },
+        {
+            "name": "Launch currently open script",
+            "type": "php",
+            "request": "launch",
+            "program": "${file}",
+            "cwd": "${fileDirname}",
+            "port": 9000
+        }
+    ]
+}
\ No newline at end of file
diff --git a/matrix-determinant/solution.php b/matrix-determinant/solution.php
new file mode 100644
index 0000000..7b420f4
--- /dev/null
+++ b/matrix-determinant/solution.php
@@ -0,0 +1,43 @@
+<?php
+
+function determinant(array $matrix): int {
+  if (count($matrix) === 1) {
+    return $matrix[0][0];
+  }
+  
+  if (count($matrix) === 2) {
+    return $matrix[0][0] * $matrix[1][1] - $matrix[0][1] * $matrix[1][0];
+  }
+  
+  $d = 0;
+  foreach ($matrix as $i => $row) {
+    if ($i%2) {
+      $d -= $matrix[0][$i] * determinant(minor($matrix, $i));
+    } else {
+      $d += $matrix[0][$i] * determinant(minor($matrix, $i));
+    }
+  }
+
+  return $d;
+}
+
+function minor($array, $c) {
+  return array_map(
+    function ($i) use ($c) {
+      return [...array_slice($i, 0, $c), ...array_slice($i, $c+1)];
+    },
+    array_slice($array, 1)
+  );
+//   $r = [];
+//   foreach($array as $i => $row) {
+//     if ($i !== 0) {
+//         $r[] = ;
+//     }
+//   }
+
+//   return $r;
+}
+
+determinant([[2, 5, 3],
+[1, -2, -1],
+[1, 3, 4]]);
diff --git a/molecule-to-atoms/.devcontainer/Dockerfile b/molecule-to-atoms/.devcontainer/Dockerfile
new file mode 100644
index 0000000..cd6e40d
--- /dev/null
+++ b/molecule-to-atoms/.devcontainer/Dockerfile
@@ -0,0 +1,38 @@
+#-------------------------------------------------------------------------------------------------------------
+# Copyright (c) Microsoft Corporation. All rights reserved.
+# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
+#-------------------------------------------------------------------------------------------------------------
+FROM php:7-alpine
+
+ARG USERNAME=vscode
+ARG USER_UID=1000
+ARG USER_GID=$USER_UID
+
+ADD https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/master/install-php-extensions /usr/local/bin/
+RUN chmod uga+x /usr/local/bin/install-php-extensions && sync
+
+# Configure apt and install packages
+    #
+    # install git iproute2, procps, lsb-release (useful for CLI installs)
+    RUN apk add git
+    # less iproute2 procps iproute2 lsb-release \
+    #
+    # Install extensions
+    RUN install-php-extensions zip xdebug \
+    && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    && echo "xdebug.remote_autostart=on" >> /usr/local/etc/php/conf.d/xdebug.ini
+    #
+    # Install xdebug
+    # && yes | pecl install xdebug \
+    # && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
+    # && echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    # && echo "xdebug.remote_autostart=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
+    #
+    # Install Composer
+    RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
+    && composer global require hirak/prestissimo \
+    && composer clear-cache
+    #
+    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.
+    RUN addgroup --gid 1000 --system dockeruser \
+    && adduser --system --uid 1000 --ingroup dockeruser dockeruser
diff --git a/molecule-to-atoms/.devcontainer/devcontainer.json b/molecule-to-atoms/.devcontainer/devcontainer.json
new file mode 100644
index 0000000..6bcaef9
--- /dev/null
+++ b/molecule-to-atoms/.devcontainer/devcontainer.json
@@ -0,0 +1,26 @@
+// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
+// https://github.com/microsoft/vscode-dev-containers/tree/v0.122.1/containers/php-7
+{
+	"name": "PHP 7",
+	"dockerFile": "Dockerfile",
+	
+	// Set *default* container specific settings.json values on container create.
+	"settings": { 
+		"terminal.integrated.shell.linux": "/bin/sh"
+	},
+
+	// Add the IDs of extensions you want installed when the container is created.
+	"extensions": [
+		"felixfbecker.php-debug",
+		"felixfbecker.php-intellisense"
+	]
+
+	// Use 'forwardPorts' to make a list of ports inside the container available locally.
+	// "forwardPorts": [],
+
+	// Use 'postCreateCommand' to run commands after the container is created.
+	// "postCreateCommand": "php -v",
+
+	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
+	// "remoteUser": "vscode"
+}
diff --git a/molecule-to-atoms/.vscode/launch.json b/molecule-to-atoms/.vscode/launch.json
new file mode 100644
index 0000000..612eaac
--- /dev/null
+++ b/molecule-to-atoms/.vscode/launch.json
@@ -0,0 +1,22 @@
+{
+    // Use IntelliSense to learn about possible attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "Listen for XDebug",
+            "type": "php",
+            "request": "launch",
+            "port": 9000
+        },
+        {
+            "name": "Launch currently open script",
+            "type": "php",
+            "request": "launch",
+            "program": "${file}",
+            "cwd": "${fileDirname}",
+            "port": 9000
+        }
+    ]
+}
\ No newline at end of file
diff --git a/molecule-to-atoms/solution.php b/molecule-to-atoms/solution.php
new file mode 100644
index 0000000..7d6c97e
--- /dev/null
+++ b/molecule-to-atoms/solution.php
@@ -0,0 +1,53 @@
+<?php
+
+function parse_molecule(string $formula): array {
+  $pos = 0;
+  $mode = 'none';
+  $mol = '';
+  $cur = [];
+  $r = [];
+  $level = 0;
+  while(true) {
+    # If we hit the end
+    if ($pos === strlen($formula)) {
+      if ($mol) {
+        $cur[$mol] = 1;
+        break;
+      }
+    }
+
+    $char = $formula[$pos];
+    switch ($mode) {
+      case 'none':
+        $mol = $char;
+        $mode = 'mol';
+        break;
+      
+      case 'mol':
+        if (ctype_alpha($char)) {
+          if (ctype_lower($char)) {
+            $mol .= $char;
+          } else {
+            $cur[] = $mol;
+            $mol = $char;
+          }
+        } else {
+          if (is_numeric($char)) {
+            $cur[$mol] = (int) $char;
+            $mol = '';
+            $mode = '';
+          } elseif (in_array($char, ['[', '{', '('])) {
+            $level++;
+          } elseif(in_array($char, [']', '}', ')'])) {
+            $level--;
+          }
+        }
+        break;
+    }
+    $pos++;
+  }
+
+  return $r;
+}
+
+parse_molecule('H2O');
\ No newline at end of file
